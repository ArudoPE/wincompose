<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i18n="clr-namespace:WinCompose.i18n"
        xmlns:wc="clr-namespace:WinCompose"
        mc:Ignorable="d" x:Class="WinCompose.SettingsWindow"
        Title="{x:Static i18n:Text.Options}" Width="400" Height="500"
        Icon="/WinCompose;component/res/key_compose.png"
        WindowStyle="ToolWindow"
        ResizeMode="NoResize"
        WindowStartupLocation="CenterScreen"
        SizeToContent="Height"
        Closing="CloseWindowClicked">

    <Window.Resources>

       <!-- display tooltips for 30 seconds; they’re supposed to be helpful -->
       <Style TargetType="TextBlock">
           <Setter Property="ToolTipService.ShowDuration" Value="30000" />
       </Style>
       <Style TargetType="CheckBox">
           <Setter Property="ToolTipService.ShowDuration" Value="30000" />
       </Style>

       <!-- wrap tooltips at 350 pixels width -->
       <Style TargetType="ToolTip">
          <Setter Property="ContentTemplate">
             <Setter.Value>
                <DataTemplate>
                   <StackPanel>
                      <TextBlock Text="{Binding}" MaxWidth="350" TextWrapping="Wrap" />
                   </StackPanel>
                </DataTemplate>
             </Setter.Value>
          </Setter>
       </Style>
    </Window.Resources>

    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close"
                        Executed="OnCloseCommandExecuted"/>
    </Window.CommandBindings>
    
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="ApplicationCommands.Close"/>
        <!-- TODO: bind this to something -->
        <!--<KeyBinding Key="Escape" Command=""/>-->
    </Window.InputBindings>

    <DockPanel Margin="8">

      <!-- The Settings group -->
      <GroupBox DockPanel.Dock="Top" Header="{x:Static i18n:Text.Behavior}" VerticalAlignment="Top">
         <Grid VerticalAlignment="Top">
             <Grid.ColumnDefinitions>
                 <ColumnDefinition Width="Auto"/>
                 <ColumnDefinition Width="*"/>
             </Grid.ColumnDefinitions>
             <Grid.RowDefinitions>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
                 <RowDefinition Height="Auto"/>
             </Grid.RowDefinitions>

             <TextBlock Grid.Row="0" Grid.Column="0" Text="{x:Static i18n:Text.Language}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"
                        ToolTipService.ToolTip="{x:Static i18n:Text.LanguageToolTip}"/>
             <ComboBox Grid.Row="0" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                       ItemsSource="{x:Static wc:Settings.ValidLanguages}"
                       SelectedValue="{Binding SelectedLanguage}"
                       SelectedValuePath="Key" DisplayMemberPath="Value"/>

             <TextBlock Grid.Row="1" Grid.Column="0" Text="{x:Static i18n:Text.ComposeKey}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"
                        ToolTipService.ToolTip="{x:Static i18n:Text.ComposeKeyToolTip}"/>
             <ComboBox Grid.Row="1" Grid.Column="1" Margin="8,4" VerticalAlignment="Center"
                       ItemsSource="{x:Static wc:Settings.ValidComposeKeys}"
                       SelectedItem="{Binding Value, Source={x:Static wc:Settings.ComposeKey}}"
                       SelectedValuePath="" DisplayMemberPath="FriendlyName"/>

             <TextBlock Grid.Row="2" Grid.Column="0" Text="{x:Static i18n:Text.ResetDelay}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"/>
             <Grid Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                 <Grid.ColumnDefinitions>
                     <ColumnDefinition MaxWidth="70" />
                     <ColumnDefinition />
                 </Grid.ColumnDefinitions>
                 <TextBox Margin="8,4" Text="{Binding Value, Source={x:Static wc:Settings.ResetDelay}}"/>
                 <TextBlock Grid.Row="2" Grid.Column="1" Text="{x:Static i18n:Text.Milliseconds}"
                            Margin="8,4" />
             </Grid>

             <TextBlock Grid.Row="3" Grid.Column="0" Text="{x:Static i18n:Text.TestTyping}"
                        Margin="8,4" TextAlignment="Right" VerticalAlignment="Center"/>
             <TextBox Grid.Row="3" Grid.Column="1" DockPanel.Dock="Top" Margin="8" Width="Auto"
                      Height="Auto" FontSize="20" FontWeight="SemiBold"
                      Foreground="#434" Background="#eee" ForceCursor="True">ÅḄ₡Đ♥…</TextBox>
         </Grid>
      </GroupBox>

      <GroupBox DockPanel.Dock="Top" Header="{x:Static i18n:Text.UserDefinedSequences}" VerticalAlignment="Top">
          <Grid>
              <Grid.ColumnDefinitions>
                  <ColumnDefinition />
                  <ColumnDefinition />
              </Grid.ColumnDefinitions>
              <Button x:Name="EditUserDefinedSequences"  Grid.Column="0" MinWidth="80" Margin="8,4" Content="{x:Static i18n:Text.UserDefinedSequencesEdit}" Click="EditUserDefinedSequences_Click" />
              <Button x:Name="ReloadUserDefinedSequences" Grid.Column="1" MinWidth="80" Margin="8,4" Content="{x:Static i18n:Text.UserDefinedSequencesReload}" Click="ReloadUserDefinedSequences_Click" />
          </Grid>
      </GroupBox>

      <!-- The Invalid Sequences group -->
      <GroupBox DockPanel.Dock="Top" Header="{x:Static i18n:Text.InvalidSequences}" VerticalAlignment="Top">
          <Grid VerticalAlignment="Center">
              <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

             <CheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                       Margin="8,4" VerticalAlignment="Center"
                       IsChecked="{Binding Value, Source={x:Static wc:Settings.CaseInsensitive}}"
                       ToolTipService.ToolTip="{x:Static i18n:Text.CaseInsensitiveToolTip}">
                 <TextBlock Text="{x:Static i18n:Text.CaseInsensitive}" TextWrapping="Wrap"/>
             </CheckBox>

             <CheckBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                       Margin="8,4" VerticalAlignment="Center"
                       IsChecked="{Binding Value, Source={x:Static wc:Settings.DiscardOnInvalid}}"
                       ToolTipService.ToolTip="{x:Static i18n:Text.DiscardOnInvalidToolTip}">
                 <TextBlock Text="{x:Static i18n:Text.DiscardOnInvalid}" TextWrapping="Wrap"/>
             </CheckBox>

             <CheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                       Margin="8,4" VerticalAlignment="Center"
                       IsChecked="{Binding Value, Source={x:Static wc:Settings.BeepOnInvalid}}"
                       ToolTipService.ToolTip="{x:Static i18n:Text.BeepOnInvalidToolTip}">
                 <TextBlock Text="{x:Static i18n:Text.BeepOnInvalid}" TextWrapping="Wrap"/>
             </CheckBox>

          </Grid>
      </GroupBox>


      <!-- The Tweaks group -->
      <GroupBox DockPanel.Dock="Top" Header="{x:Static i18n:Text.Tweaks}" VerticalAlignment="Top">
          <Grid VerticalAlignment="Center">
              <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>

              <CheckBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.UnicodeInput}}"
                      ToolTipService.ToolTip="{x:Static i18n:Text.UnicodeInputToolTip}">
                  <TextBlock Text="{x:Static i18n:Text.UnicodeInput}" TextWrapping="Wrap"/>
              </CheckBox>

              <CheckBox Grid.Row="1" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center" IsEnabled="False"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.KeepOriginalKey}}"
                      ToolTipService.ToolTip="{x:Static i18n:Text.KeepOriginalKeyToolTip}">
                  <TextBlock Text="{x:Static i18n:Text.KeepOriginalKey}" TextWrapping="Wrap"/>
              </CheckBox>

              <CheckBox Grid.Row="2" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.InsertZwsp}}"
                      ToolTipService.ToolTip="{x:Static i18n:Text.InsertZwspToolTip}">
                  <TextBlock Text="{x:Static i18n:Text.InsertZwsp}" TextWrapping="Wrap"/>
              </CheckBox>

              <CheckBox Grid.Row="3" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.EmulateCapsLock}}"
                      ToolTipService.ToolTip="{x:Static i18n:Text.EmulateCapsLockToolTip}">
                  <TextBlock Text="{x:Static i18n:Text.EmulateCapsLock}" TextWrapping="Wrap"/>
              </CheckBox>

              <CheckBox Grid.Row="4" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.ShiftDisablesCapsLock}}"
                      ToolTipService.ToolTip="{x:Static i18n:Text.ShiftDisablesCapsLockToolTip}">
                  <TextBlock Text="{x:Static i18n:Text.ShiftDisablesCapsLock}" TextWrapping="Wrap"/>
              </CheckBox>

              <CheckBox Grid.Row="5" Grid.Column="0"
                      Margin="8,4" VerticalAlignment="Center"
                      IsChecked="{Binding Value, Source={x:Static wc:Settings.CapsLockCapitalizes}}"
                      ToolTipService.ToolTip="{x:Static i18n:Text.CapsLockCapitalizesToolTip}">
                  <TextBlock Text="{x:Static i18n:Text.CapsLockCapitalizes}" TextWrapping="Wrap"/>
              </CheckBox>
          </Grid>
      </GroupBox>

      <!-- The Close button -->
      <StackPanel Margin="10" DockPanel.Dock="Bottom" Orientation="Vertical">
          <TextBlock Foreground="Red" Text="{x:Static i18n:Text.NeedRestart}" HorizontalAlignment="Left"
                     Margin="0, 0, 0, 4" Visibility="{Binding WarnMessageVisibility}" TextWrapping="Wrap"/>
          <Button DockPanel.Dock="Bottom" HorizontalAlignment="Right" VerticalAlignment="Bottom" MinWidth="80"
                  Content="{Binding CloseButtonText}" Command="{Binding CloseButtonCommand}"
                  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}" />
      </StackPanel>

  </DockPanel>
</Window>
